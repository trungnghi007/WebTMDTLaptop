@{
    ViewBag.Title = "Chat với Khách Hàng";
    TMDTLaptop.Models.LaptopStoreEntities db = new TMDTLaptop.Models.LaptopStoreEntities();
    string currentUser = Session["Admin"]?.ToString(); // Lấy tên người dùng từ session
    var user = db.TaiKhoan.SingleOrDefault(u => u.Username == currentUser);

}

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f7f9fc; /* Màu nền cho toàn bộ trang */
        margin: 0;
        padding: 20px;
    }

    .chat-layout {
        display: flex;
        height: 600px; /* Chiều cao cho layout */
        background-color: #ffffff; /* Màu nền cho hộp chat */
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        margin-top : 20px
    }

    .logout-button {
        align-self: flex-end; /* Căn phải cho nút đăng xuất */
        margin-bottom: 30px; /* Khoảng cách với hộp chat */
        padding: 10px 20px; /* Padding cho nút */
        background-color: #dc3545; /* Màu nền cho nút đăng xuất */
        color: white; /* Màu chữ cho nút */
        border: none; /* Không có viền */
        border-radius: 5px; /* Bo tròn các góc */
        cursor: pointer; /* Con trỏ khi hover */
    }

        .logout-button:hover {
            background-color: #c82333; /* Màu nền khi hover */
        }

    .customer-list {
        width: 30%; /* Chiều rộng cho danh sách khách hàng */
        border-right: 1px solid #ccc;
        overflow-y: auto;
        padding: 10px;
    }

    .message-box {
        width: 70%; /* Chiều rộng cho hộp chat */
        padding: 10px;
        overflow-y: auto;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    h4 {
        color: #333;
        margin-bottom: 15px;
    }

    .list-group-item {
        border: none; /* Không có viền cho item */
        border-radius: 4px;
        transition: background-color 0.3s;
        padding: 15px; /* Padding cho button */
        display: flex; /* Sử dụng flexbox để bố trí nội dung */
        flex-direction: column; /* Dọc */
        justify-content: center; /* Giữa */
        align-items: flex-start; /* Bắt đầu */
        margin-bottom: 10px; /* Khoảng cách giữa các button */
        width: 100%;
    }

        .list-group-item:hover {
            background-color: #f1f1f1; /* Màu nền khi hover */
        }

    .message {
        margin-bottom: 10px;
        padding: 8px;
        border-radius: 5px;
    }

    .customer-message {
        background-color: #e1f7d5; /* Màu nền cho tin nhắn khách hàng */
        text-align: left;
    }

    .employee-message {
        background-color: #d1e7ff; /* Màu nền cho tin nhắn nhân viên */
        text-align: right;
    }

    .message-form {
        margin-top: 20px;
        display: flex;
        flex-direction: row; /* Sắp xếp theo hàng để ô nhập và nút gửi nằm ngang */
        align-items: center; /* Canh giữa */
    }

    .form-control {
        border-radius: 20px; /* Bo tròn các góc */
        border: 1px solid #ccc;
        padding: 10px 15px; /* Padding cho ô nhập */
        flex-grow: 1; /* Ô nhập chiếm không gian còn lại */
        margin-right: 10px; /* Khoảng cách giữa ô nhập và nút gửi */
        width: 950px;
    }

    .btn-primary {
        background-color: #007bff; /* Màu nền cho nút */
        border: none;
        padding: 10px 15px; /* Padding cho nút */
        border-radius: 20px; /* Bo tròn các góc */
        color: #fff;
        cursor: pointer;
        display: flex; /* Hiển thị như flexbox để căn giữa icon */
        align-items: center; /* Căn giữa icon */
    }

        .btn-primary:hover {
            background-color: #0056b3; /* Màu nền khi hover */
        }

    .send-icon {
        margin-left: 5px; /* Khoảng cách giữa chữ và icon */
    }

    .new-message {
        font-size: 12px; /* Kích thước chữ cho tin nhắn mới */
        color: #888; /* Màu chữ cho tin nhắn mới */
    }
</style>
<a href="@Url.Action("DangXuat","Login")" class="logout-button" id="logoutBtn">Đăng Xuất</a>
<a href="@Url.Action("QuanLyTonKho", "Admin")" class="logout-button" id="checkInventoryBtn">Trang quản lý</a>
<div class="container chat-layout">

    <div class="customer-list">
        <h4>Danh Sách Khách Hàng</h4>
        <div class="list-group">
            @foreach (var customer in ViewBag.Customers)
            {
                <button type="button" class="list-group-item list-group-item-action customer-item" data-id="@customer.MaTaiKhoan">
                    @customer.HoTen
                    <div class="new-message">
                        @{
                            var messages = db.Messages.ToList();
                            var latestMessage = messages
                                .Where(m => (m.SenderId == customer.MaTaiKhoan && m.ReceiverId == user.MaTaiKhoan) ||
                                             (m.ReceiverId == customer.MaTaiKhoan && m.SenderId == user.MaTaiKhoan))
                                .OrderByDescending(m => m.Timestamp)
                                .FirstOrDefault();

                        }

                        @if (latestMessage != null)
                        {
                            <p>@latestMessage.Content</p>
                        }
                        else
                        {
                            <p>Chưa có tin nhắn nào.</p>
                        }
                    </div>
                </button>
            }
        </div>
    </div>

    <div class="message-box" id="messageBox">
        <h4>Tin Nhắn</h4>
        <div id="chatMessages" style="height: 500px; overflow-y: scroll; border: 1px solid #ccc; padding: 10px; border-radius: 5px;">
            <!-- Tin nhắn sẽ được hiển thị ở đây -->
        </div>
        <form id="messageForm" class="message-form">
            <input type="hidden" name="receiver" id="receiverId" />
            <div class="form-group">
                <textarea name="content" id="messageContent" class="form-control" rows="3" placeholder="Nhập tin nhắn..."></textarea>
            </div>
            <button type="submit" class="btn btn-primary" id="sendMessageBtn">
                Gửi <i class="fas fa-paper-plane send-icon"></i>
            </button>
        </form>

    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
$(document).ready(function () {
    // Xử lý sự kiện khi nhấn vào button khách hàng
    $('.customer-item').on('click', function () {
        var receiverId = $(this).data('id'); // Lấy giá trị data-id từ button được nhấn
        $('#receiverId').val(receiverId); // Gán vào input hidden
        loadMessages(receiverId); // Tải lại tin nhắn cho khách hàng được chọn
    });

    // Cập nhật danh sách khách hàng
    function updateCustomerList() {
        $.get('@Url.Action("GetCustomerList", "ChamSocKH")', function (data) {
            $('.customer-list .list-group').empty(); // Xóa nội dung cũ
            $.each(data, function (index, customer) {
                // Tạo nút cho khách hàng với số lượng tin nhắn mới
                var buttonHtml = '<button type="button" class="list-group-item list-group-item-action customer-item" data-id="' + customer.MaTaiKhoan + '">'
                    + customer.HoTen + '<div class="new-message">'
                    + (customer.LatestMessage != null ? customer.LatestMessage : 'Chưa có tin nhắn nào.')
                    + '</div></button>';
                $('.customer-list .list-group').append(buttonHtml);
            });

            // Gán lại sự kiện click cho các button mới được thêm vào
            $('.customer-item').on('click', function () {
                var receiverId = $(this).data('id');
                $('#receiverId').val(receiverId);
                loadMessages(receiverId); // Tải lại tin nhắn cho khách hàng được chọn
            });
        });
    }

    // Gọi hàm updateCustomerList mỗi vài giây
    setInterval(updateCustomerList, 5000); // Cập nhật mỗi 5 giây

    // Tải tin nhắn từ server
   function loadMessages(receiverId) {
    $.get('@Url.Action("GetMessages", "ChamSocKH")', { receiverId: receiverId }, function (data) {
        $('#chatMessages').empty(); // Xóa nội dung cũ
        $.each(data, function (index, message) {
            var messageClass = message.SenderId == receiverId ? 'customer-message' : 'employee-message';

            // Lấy tên người gửi
            var senderName = message.SenderId == receiverId ? message.SenderName : "@Session["Admin"]"; // Lấy tên từ đối tượng message hoặc tên admin từ session
            $('#chatMessages').append('<div class="message ' + messageClass + '"><strong>' + senderName + ':</strong> ' + message.Content + '<br /><small>' + message.Timestamp + '</small></div>');
        });

        // Cuộn xuống cuối chat
        var chatBox = $('#chatMessages')[0];
        if (chatBox) {
            chatBox.scrollTop = chatBox.scrollHeight; // Cuộn xuống cuối chat
        }
    });
}


    // Cập nhật chat mỗi 3 giây
    setInterval(function () {
        var receiverId = $('#receiverId').val();
        if (receiverId) {
            loadMessages(receiverId); // Tải lại tin nhắn cho khách hàng hiện tại
        }
    }, 3000);
});

// Xử lý sự kiện khi nhấn nút gửi tin nhắn
$('#sendMessageBtn').on('click', function (event) {
    event.preventDefault(); // Ngăn chặn hành động gửi form mặc định
    var receiverId = $('#receiverId').val();  // Lấy giá trị từ input hidden
    var content = $('#messageContent').val(); // Lấy nội dung tin nhắn từ textarea
    if (content) {
        $.post('@Url.Action("SendMessage", "ChamSocKH")', { receiver: receiverId, content: content }, function () {
            $('#messageContent').val(''); // Xóa ô nhập sau khi gửi
            loadMessages(receiverId); // Tải lại tin nhắn
            updateCustomerList();
        });
    }
});
</script>
